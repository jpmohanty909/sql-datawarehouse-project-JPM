----We have already tested that at this stage, all tables are populated.
---Here we create stored procedures to make sure that the create and Alter procedure query. Then use BEGIN and END. Dont use Brackets.

CREATE or ALTER PROCEDURE bronze.load_bronze AS
BEGIN
	DECLARE @start_time DATETIME, @end_time DATETIME, @batch_start_time DATETIME, @batch_end_time DATETIME; 

	BEGIN TRY
		SET @batch_start_time = GETDATE();
		PRINT '==============================================';
		PRINT 'Loading Bronze layer';
		PRINT '==============================================';
	
		PRINT '----------------------------------------------';
		PRINT 'Loading CRM Tables';
		PRINT '----------------------------------------------';
	
		SET @start_time = GETDATE(); -----------------------------stored proc value of start time is called here
		TRUNCATE TABLE bronze.crm_cust_info;
		BULK INSERT bronze.crm_cust_info
		FROM 
		'C:\Users\hp\OneDrive\Desktop\SQL Stored Procedures and Others\SQL DE Barra Project\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',   ----delimiter value between the data
			TABLOCK                  ----As SQL is loading the data, it will lock the whole table 
		);
		SET @end_time = GETDATE(); -------------------------------stored proc value of end time is called here.
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + 'seconds';

		----In the above, we are tracking the load duration which is difference between start time in seconds and end time in seconds.

		----Note when you proceed with truncate, it will remove the data in the table only. It will not remove the entire table.
		----This works in instances where the data loads are ran twice.


		SET @start_time = GETDATE(); 
		TRUNCATE TABLE bronze.crm_prd_info;
		BULK INSERT bronze.crm_prd_info
		FROM 
		'C:\Users\hp\OneDrive\Desktop\SQL Stored Procedures and Others\SQL DE Barra Project\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',   ----delimiter value between the data
			TABLOCK                  ----As SQL is loading the data, it will lock the whole table 
		);
		SET @end_time = GETDATE();
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + 'seconds';


		SET @start_time = GETDATE(); 
		TRUNCATE TABLE bronze.crm_sales_details;
		BULK INSERT bronze.crm_sales_details
		FROM 
		'C:\Users\hp\OneDrive\Desktop\SQL Stored Procedures and Others\SQL DE Barra Project\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',   ----delimiter value between the data
			TABLOCK                  ----As SQL is loading the data, it will lock the whole table 
		);
		SET @end_time = GETDATE();
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + 'seconds';


		PRINT '----------------------------------------------';
		PRINT 'Loading ERP Tables';
		PRINT '----------------------------------------------';

		SET @start_time = GETDATE(); 
		TRUNCATE TABLE bronze.erp_loc_a101;
		BULK INSERT bronze.erp_loc_a101
		FROM 
		'C:\Users\hp\OneDrive\Desktop\SQL Stored Procedures and Others\SQL DE Barra Project\sql-data-warehouse-project\datasets\source_erp\LOC_A101.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',   ----delimiter value between the data
			TABLOCK                  ----As SQL is loading the data, it will lock the whole table 
		);
		SET @end_time = GETDATE();
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + 'seconds';

		SET @start_time = GETDATE(); 
		TRUNCATE TABLE bronze.erp_cust_az12;
		BULK INSERT bronze.erp_cust_az12
		FROM 
		'C:\Users\hp\OneDrive\Desktop\SQL Stored Procedures and Others\SQL DE Barra Project\sql-data-warehouse-project\datasets\source_erp\CUST_AZ12.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',   ----delimiter value between the data
			TABLOCK                  ----As SQL is loading the data, it will lock the whole table 
		);
		SET @end_time = GETDATE();
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + 'seconds';

		
		SET @start_time = GETDATE(); 		
		TRUNCATE TABLE bronze.erp_px_cat_g1v2;
		BULK INSERT bronze.erp_px_cat_g1v2
		FROM 
		'C:\Users\hp\OneDrive\Desktop\SQL Stored Procedures and Others\SQL DE Barra Project\sql-data-warehouse-project\datasets\source_erp\PX_CAT_G1V2.csv'
		WITH (
			FIRSTROW = 2,
			FIELDTERMINATOR = ',',   ----delimiter value between the data
			TABLOCK                  ----As SQL is loading the data, it will lock the whole table 
		);	
		SET @end_time = GETDATE();
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @start_time, @end_time) AS NVARCHAR) + 'seconds';
		PRINT '>>---------';
		 
		SET @batch_end_time = GETDATE();
		PRINT '===================================================';
		PRINT 'Loading Bronze Layer is complete';
		PRINT '>>> Load Duration:' + CAST(DATEDIFF(second, @batch_start_time, @batch_end_time) AS NVARCHAR) + 'seconds';
		PRINT '===================================================';

	END TRY
	BEGIN CATCH
		PRINT '===================================================';
		PRINT 'ERROR OCCURED DURING THE LOAD OF BRONZE LAYER';
		PRINT 'ERROR MESSAGE' + ERROR_MESSAGE();
		PRINT 'ERROR MESSAGE' + CAST (ERROR_NUMBER() as NVARCHAR);
		PRINT 'ERROR MESSAGE' + CAST (ERROR_STATE() as NVARCHAR);
		PRINT '====================================================';
	END CATCH
END
